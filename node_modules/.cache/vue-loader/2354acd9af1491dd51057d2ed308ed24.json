{"remainingRequest":"D:\\my-project\\digit\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\my-project\\digit\\src\\views\\hall\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\my-project\\digit\\src\\views\\hall\\index.vue","mtime":1683791781967},{"path":"D:\\my-project\\digit\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\my-project\\digit\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\my-project\\digit\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\my-project\\digit\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/hall","sourcesContent":["<template>\r\n    <div class=\"webGl-page\">\r\n        <!-- 开启漫游 -->\r\n        <!-- <div class=\"open\" @click=\"open\">开启漫游</div> -->\r\n        <div id=\"container\"></div>\r\n        <!-- 交互点 -->\r\n        <!-- <div class=\"point\" v-for=\"(item, index) in points\" :key=\"index\"  @click=\"handlePoint(point)\">\r\n            <i class=\"icon\" >{{ item.name }}</i>\r\n        </div> -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport TWEEN from '@tweenjs/tween.js'\r\nimport * as Three from 'three'\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nexport default {\r\n    data(){\r\n        return{\r\n            renderer: '', //渲染器\r\n            scene: '', //场景\r\n            light: '', //光源\r\n            camera: '', //相机\r\n            controls: '', //控制器\r\n            mesh:null,\r\n            points: [\r\n                {\r\n                    name:'点位1',\r\n                    position: new Three.Vector3(-6, 2, -8),\r\n                },\r\n                {\r\n                    name:'点位2',\r\n                    position: new Three.Vector3(-12, 4, 9),\r\n                },\r\n                {\r\n                    name:'点位3',\r\n                    position: new Three.Vector3(6, 0, -8),\r\n                },\r\n                {\r\n                    name:'点位4',\r\n                    position: new Three.Vector3(8, 0, -8),\r\n                },\r\n                {\r\n                    name:'点位5',\r\n                    position: new Three.Vector3(12, 0, -8),\r\n                },\r\n                {\r\n                    name:'点位6',\r\n                    position: new Three.Vector3(20, 10, -8),\r\n                },\r\n            ],\r\n            positionObj:null,\r\n            mouse: new Three.Vector2(),\r\n            raycaster: new Three.Raycaster(),\r\n        }\r\n    },\r\n    created(){},\r\n    mounted(){\r\n        this.init()\r\n        this.animate()\r\n        window.onclick = this.onMouseClick;\r\n    },\r\n    open(){\r\n\r\n    },\r\n    methods:{\r\n        handlePoint(){\r\n\r\n        },\r\n        animate(){\r\n            requestAnimationFrame(this.animate)\r\n            this.renderer.render(this.scene, this.camera); //执行渲染操作\r\n            TWEEN.update()\r\n        },\r\n        init(){\r\n            this.initCam()\r\n            this.initLight()\r\n            this.initSpotLight()\r\n            // this.initFloor()\r\n            this.initModel()\r\n            this.initCylineder()\r\n        },\r\n        initCylineder(){\r\n            // const geometry = new Three.BoxGeometry(200,400,500)\r\n            // const material = new Three.MeshPhysicalMaterial({\r\n            //     color:0x6c6c6c,\r\n            //     side:Three.DoubleSide,\r\n            // })\r\n            // const mesh = new Three.Mesh(geometry,material)\r\n            // this.scene.add(mesh)\r\n        },\r\n        // 空间坐标转二维坐标\r\n        // transPosition(position) {\r\n        //     let world_vector = new THREE.Vector3(position.x, position.y, position.z);\r\n        //     let vector = world_vector.project(camera);\r\n        //     let halfWidth = window.innerWidth / 2,\r\n        //         halfHeight = window.innerHeight / 2;\r\n        //     return {\r\n        //         x: Math.round(vector.x * halfWidth + halfWidth),\r\n        //         y: Math.round(-vector.y * halfHeight + halfHeight),\r\n        //     };\r\n        // },\r\n\r\n        initPoint(){\r\n            const tick = ()=>{\r\n                const raycaster = new Three.Raycaster();\r\n                if (this.renderer) {\r\n                    for (const point of this.points) {\r\n                        const screenPosition = point.position.clone();\r\n                        // const pos = screenPosition.project(this.camera);\r\n                        // 获得一条和相机朝向一直，从鼠标点射出去的射线\r\n                        raycaster.setFromCamera(screenPosition, this.camera);\r\n                        // 调用射线与物体相交的检测函数intersectObjects\r\n                        const intersects = raycaster.intersectObjects(this.scene.children, true);\r\n                        console.log('intersects',intersects);\r\n                    //     point.element.classList.add('visible');\r\n                    //     if (intersects.length === 0) {\r\n                    //         // 未找到相交点，显示\r\n                    //         point.element.classList.add('visible');\r\n                    //     } else {\r\n                    //         // 获取相交点的距离和点的距离\r\n                    //         const intersectionDistance = intersects[0].distance;\r\n                    //         const pointDistance = point.position.distanceTo(this.camera.position);\r\n                    //         // 相交点距离比点距离近，隐藏；相交点距离比点距离远，显示\r\n                    //         intersectionDistance < pointDistance\r\n                    //             ? point.element.classList.remove(\"visible\")\r\n                    //             : point.element.classList.add(\"visible\");\r\n                    //     }\r\n                    //     // 物体转动到背面时隐藏，否则显示\r\n                    //     pos.z > 1\r\n                    //         ? point.element.classList.remove(\"visible\")\r\n                    //         : point.element.classList.add(\"visible\");\r\n\r\n                    //     const translateX = screenPosition.x * window.innerWidth * 0.5;\r\n                    //     const translateY = -screenPosition.y * window.innerHeight * 0.5;\r\n                    //     point.element.style.transform = `translateX(${translateX}px) translateY(${translateY}px)`;\r\n                    }\r\n                    this.controls && this.controls.update()\r\n                    TWEEN && TWEEN.update()\r\n                    // 更新渲染器\r\n                    this.renderer.render(this.scene, this.camera)\r\n                }\r\n            }\r\n            tick()\r\n        },\r\n        initLight(){\r\n            var point = new Three.PointLight(0xffffff);\r\n            point.position.set(-5,10,1);\r\n            this.scene.add(point);\r\n        },\r\n        // 聚光灯\r\n        initSpotLight(){\r\n            const spot = new Three.SpotLight('#fff',2)    //颜色，强度    \r\n            spot.angle = Math.PI / 8\r\n            spot.penumbra = 0.2  //横向  锥型半影衰减百分比\r\n            spot.decay = 2   //纵向\r\n            spot.distance = 30\r\n            spot.shadow.radius = 10\r\n            spot.position.set(-5,10,1)\r\n            spot.castShadow = true\r\n            this.scene.add(spot)\r\n        },\r\n\r\n        // 地板\r\n        initFloor(){\r\n            let floorGeometry = new Three.PlaneGeometry(100,100)  //平面几何\r\n            const material = new Three.MeshPhysicalMaterial({\r\n                color:0x808080,\r\n                side:Three.DoubleSide,\r\n                metalness:0,  //金属度  ，0代表非金属\r\n                roughness:0.1   //粗糙度  越小越光滑\r\n            })\r\n            const mesh = new Three.Mesh(floorGeometry,material)\r\n            mesh.rotation.x = Math.PI/2\r\n            this.scene.add(mesh)\r\n        },\r\n\r\n        initCam(){\r\n            let container = document.getElementById('container');\r\n            this.camera = new Three.PerspectiveCamera(45, container.clientWidth / container.clientHeight, 0.1, 1000);\r\n            this.camera.position.set(-100,10,80)\r\n\r\n            this.scene = new Three.Scene();\r\n            this.scene.background = new Three.Color(\"#ccc\")\r\n            this.scene.environment = new Three.Color(\"#ccc\")\r\n\r\n            const grid = new Three.GridHelper(100,100)\r\n            grid.material.opacity = 0.2\r\n            grid.material.transparent = true\r\n            this.scene.add(grid);\r\n\r\n            var ambient = new Three.AmbientLight(0x444444, 3); //添加光源  颜色和光照强度\r\n            var axisHelper = new Three.AxesHelper(600); //添加辅助坐标系\r\n            this.scene.add(ambient, axisHelper);\r\n\r\n            this.renderer = new Three.WebGLRenderer({\r\n                antialias: true\r\n            });\r\n            this.renderer.setSize(container.clientWidth, container.clientHeight);\r\n            container.appendChild(this.renderer.domElement);\r\n\r\n            // 初始化控制器\r\n            this.controls = new OrbitControls(this.camera, this.renderer.domElement); \r\n            this.controls.minDistance = 1; // 设置移动的最短距离（默认为零）\r\n            this.controls.maxDistance = 1000; // 设置移动的最长距离（默认为无穷）\r\n            // this.controls.maxPolarAngle = 80 / 360 *2 * Math.PI; //绕垂直轨道的距离（范围是0-Math.PI,默认为Math.PI）\r\n            // this.controls.minPolarAngle = 0; \r\n            // this.controls.enableDamping = true\r\n            this.controls.minPolarAngle = 0;\r\n            this.controls.maxPolarAngle = 1.5;\r\n        },\r\n\r\n        initModel(){\r\n            let loader = new GLTFLoader();\r\n            loader.load('hall1.glb',  ( gltf )=> {\r\n                this.scene.add(gltf.scene);\r\n            })\r\n        },\r\n        // 鼠标点击模型\r\n        onMouseClick(event) {\r\n           \r\n            console.log(event);\r\n            //通过鼠标点击的位置计算出raycaster所需要的点的位置，以屏幕中心为原点，值的范围为-1到1\r\n            this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n            this.mouse.y = -(event.clientY / (window.innerHeight - 50)) * 2 + 1;\r\n            console.log('this.mouse',this.mouse);\r\n            // 通过鼠标点的位置和当前相机的矩阵计算出raycaster\r\n            this.raycaster.setFromCamera(this.mouse, this.camera);\r\n            // 获取raycaster直线和所有模型相交的数组集合\r\n            let intersects = this.raycaster.intersectObjects(this.scene.children);\r\n            if (!intersects[0]) {\r\n                return;\r\n            } else {\r\n                this.positionObj = {\r\n                    x: intersects[0].point.x,\r\n                    y: intersects[0].point.y,\r\n                    z: intersects[0].point.z,\r\n                }\r\n                this.initTween(\r\n                    this.positionObj.x,\r\n                    this.positionObj.y,\r\n                    this.positionObj.z,\r\n                )\r\n            }\r\n        },\r\n\r\n        // 相机移动动画\r\n        initTween(targetX, targetY, targetZ) {\r\n            // 获取当前相机位置\r\n            let initPosition = {\r\n                x: this.camera.position.x,\r\n                y: this.camera.position.y,\r\n                z: this.camera.position.z,\r\n            };\r\n            //定义相机移动方法\r\n            let tween = new TWEEN.Tween(initPosition)\r\n                .to({ x: targetX, y: 10, z: targetZ }, 3000)\r\n                .easing(TWEEN.Easing.Sinusoidal.Out);\r\n            \r\n            tween.onUpdate((that)=>{\r\n                // if (that.z < 0) {\r\n                //     this.camera.position.set(that.x, that.y, that.z);\r\n                // } else {\r\n                //     this.camera.position.set(that.x, that.y, 12);\r\n                // }\r\n                this.camera.position.set(that.x,that.y,that.z)\r\n                // this.controls.target.set(that.x,that.y,-10) \r\n            })\r\n            // this.controls.update();\r\n            tween.start();\r\n             //设置相机target位置（看向坐标轴零点的位置）\r\n            this.controls.target.set(0, 0, 0);\r\n            //相机返回原点后，开启模型自动旋转\r\n            // this.controls.autoRotate = true;\r\n        }\r\n    }  \r\n}\r\n</script>\r\n\r\n<style>\r\n    #container {\r\n        cursor: pointer;\r\n\t\twidth: 100%;\r\n        height: 1080px;\r\n\t}\r\n.open{\r\n    cursor: pointer;\r\n    background-color: #fff;\r\n    padding: 10px;\r\n    /* color: #fff; */\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 20px;\r\n}\r\n</style>"]}]}