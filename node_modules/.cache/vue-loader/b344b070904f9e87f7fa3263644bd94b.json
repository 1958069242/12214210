{"remainingRequest":"D:\\my-project\\digit\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\my-project\\digit\\src\\views\\canvas\\index.vue?vue&type=style&index=0&id=9094ee16&lang=less&","dependencies":[{"path":"D:\\my-project\\digit\\src\\views\\canvas\\index.vue","mtime":1690774579174},{"path":"D:\\my-project\\digit\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\my-project\\digit\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\my-project\\digit\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\my-project\\digit\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\my-project\\digit\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\my-project\\digit\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovLyBAaW1wb3J0ICIuLi9pbmRleC9pbmRleC5sZXNzIjsNCmJvZHkgew0KDQp9DQoNCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA6LA;AACA;;AAEA","file":"index.vue","sourceRoot":"src/views/canvas","sourcesContent":["<template>\r\n    <div class=\"index-page\">\r\n\t\t<button @click=\"drawLine\">线条</button>\r\n\t\t<button @click=\"drawRect\">矩形</button>\r\n\t\t<button @click=\"drawText\">文本</button>\r\n\t\t<button @click=\"drawCircle\">圆形</button>\r\n\t\t<button @click=\"gradRect\">渐变矩形</button>\r\n\t\t<button @click=\"shadowRect\">阴影</button>\r\n\t\t<button @click=\"drawImage\">图片</button>\r\n\t\t<button @click=\"animate\">动画</button>\r\n\t\t<button @click=\"write\">签名</button>\r\n\t\t<!-- <Vrmodel></Vrmodel> -->\r\n\t\t<!-- <Vrvideo :modelUrl=\"mp4\"></Vrvideo> -->\r\n        <canvas id=\"myCanvas\" width=\"1000\" height=\"600\"></canvas>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n\tcomponents: {\r\n\t},\r\n\tcreated () {\r\n\t},\r\n\tdata () {\r\n\t\treturn {\r\n\t\t\t// mp4:require('../../assets/img/huozhongpian.mp4'),\r\n\t\t\tcanvas:null,\r\n\t\t\tctx:null,\r\n\t\t\tstartX: 0, \r\n\t\t\tstartY: 0,\r\n\t\t\tisDrawing :false,\r\n\t\t\thasDraw :false\r\n\t\t}\r\n\t},\r\n\tmounted(){\r\n\t\tthis.canvas = document.getElementById('myCanvas')\r\n\t\tthis.ctx = this.canvas.getContext('2d')\r\n\t\t\r\n\t},\r\n\tmethods: {\r\n\t\tdrawLine(){\r\n\t\t\tthis.ctx.beginPath(); // 开始路径绘制\r\n\t\t\tthis.ctx.moveTo(0, 20); // 设置路径起点，坐标为(20,20)\r\n\t\t\tthis.ctx.lineTo(200, 20); // 绘制一条到(200,20)的直线\r\n\t\t\tthis.ctx.lineWidth = 1.0; // 设置线宽\r\n\t\t\tthis.ctx.strokeStyle = '#CC0000'; // 设置线的颜色\r\n\t\t\tthis.ctx.stroke(); // 进行线的着色，这时整条线才变得可见\r\n\t\t},\r\n\t\tdrawRect(){\r\n\t\t\tthis.ctx.fillStyle=\"yellow\"\r\n\t\t\tthis.ctx.fillRect(120, 20, 200, 200); \r\n\t\t\t// this.ctx.strokeRect(10,10,200,100);    //空心矩形\r\n\t\t},\r\n\t\tdrawText(){\r\n\t\t\t// 设置字体\r\n\t\t\tthis.ctx.font = \"Bold 20px Arial\"; \r\n\t\t\t// 设置对齐方式\r\n\t\t\tthis.ctx.textAlign = \"left\";\r\n\t\t\t// 设置填充颜色\r\n\t\t\tthis.ctx.fillStyle = \"#008600\"; \r\n\t\t\t// 设置字体内容，以及在画布上的位置\r\n\t\t\tthis.ctx.fillText(\"Hello!\", 10, 50); \r\n\r\n\t\t\t// 绘制空心字\r\n\t\t\t// this.ctx.strokeText(\"Hello!\", 10, 100); \r\n\t\t},\r\n\t\tdrawCircle(){\r\n\t\t\tthis.ctx.beginPath()\r\n\t\t\tthis.ctx.fillStyle = 'red'\r\n\t\t\tthis.ctx.arc(200,200,100,0,Math.PI*2,true)   //ctx.arc(x, y, radius, startAngle, endAngle, anticlockwise);\r\n\t\t\tthis.ctx.fill()\r\n\r\n\t\t\t// 绘制空心\r\n\t\t\t// ctx.strokeStyle = \"#000\"; \r\n\t\t\t// ctx.stroke();\t               \r\n\t\t},\r\n\t\tgradRect(){\r\n\t\t\tlet myGradient = this.ctx.createLinearGradient(0, 0, 0, 160);   //createLinearGradient方法的参数是(x1, y1, x2, y2)，其中x1和y1是起点坐标，x2和y2是终点坐标。通过不同的坐标值，可以生成从上至下、从左到右的渐变等等。\r\n\t\t\tmyGradient.addColorStop(0, \"yellow\"); \r\n\t\t\tmyGradient.addColorStop(1, \"red\");\r\n\t\t\tthis.ctx.fillStyle = myGradient\r\n\t\t\tthis.ctx.fillRect(10,10,200,100);\r\n\t\t},\r\n\t\tshadowRect(){\r\n\t\t\tthis.ctx.shadowOffsetX = 10; // 设置水平位移\r\n\t\t\tthis.ctx.shadowOffsetY = 10; // 设置垂直位移\r\n\t\t\tthis.ctx.shadowBlur = 5; // 设置模糊度\r\n\t\t\tthis.ctx.shadowColor = \"rgba(0,0,0,0.5)\"; // 设置阴影颜色\r\n\t\t\tthis.ctx.fillStyle = \"#CC0000\"; \r\n\t\t\tthis.ctx.fillRect(10,10,200,100);\r\n\t\t},\r\n\t\tdrawImage(){\r\n\t\t\tlet img = new Image()\r\n\t\t\timg.src = require('../../assets/avatar1.jpg')\r\n\t\t\tthis.ctx.drawImage(img, 120, 120); // 设置对应的图像对象，以及它在画布上的位置\r\n\t\t},\r\n\t\tanimate(){\r\n\t\t\tlet posX = 20\r\n\t\t\tlet posY = 100\r\n\t\t\tsetInterval(()=> {\r\n\t\t\t\tthis.ctx.fillStyle = \"black\";\r\n\t\t\t\tthis.ctx.fillRect(0,0,this.canvas.width, this.canvas.height);\r\n\t\t\t\tposX += 1;\r\n\t\t\t\tposY += 0.25;\r\n\t\t\t\tthis.ctx.beginPath();\r\n\t\t\t\tthis.ctx.fillStyle = \"white\";\r\n\t\t\t\tthis.ctx.arc(posX, posY, 10, 0, Math.PI*2, true); \r\n\t\t\t\tthis.ctx.closePath();\r\n\t\t\t\tthis.ctx.fill();\r\n\t\t\t}, 30);\r\n\t\t},\r\n\r\n\r\n\t\t// 签名实现\r\n\t\tdrawStart(size) {\r\n\t\t\tconst x = size.x, y = size.y;\r\n\t\t\tthis.ctx.beginPath();\r\n\t\t\tthis.ctx.moveTo(x, y);  \r\n\t\t\tthis.ctx.lineTo(x, y);\r\n\t\t\tthis.ctx.strokeStyle = '#000';\r\n\t\t\tthis.ctx.lineWidth ='20';\r\n\t\t\tthis.ctx.stroke();\r\n\t\t\tthis.ctx.closePath();\r\n\t\t\tthis.startY = y;\r\n\t\t\tthis.startX = x;\r\n\t\t},\r\n\t\tdrawMove(size) {\r\n\t\t\tconst x = size.x, y = size.y;\r\n\t\t\tthis.ctx.beginPath();\r\n\t\t\tthis.ctx.moveTo(this.startX, this.startY);\r\n\t\t\tthis.ctx.lineTo(x, y);\r\n\t\t\tthis.ctx.strokeStyle = '#000';\r\n\t\t\tthis.ctx.lineWidth ='20';\r\n\t\t\tthis.ctx.stroke();\r\n\t\t\tthis.ctx.closePath();\r\n\t\t\tthis.startY = y;\r\n\t\t\tthis.startX = x;\r\n\t\t},\r\n\t\tdrawEnd(size) {\r\n\t\t\tthis.ctx.beginPath();\r\n\t\t\tthis.ctx.moveTo(this.startX, this.startY);\r\n\t\t\tthis.ctx.lineTo(size.x , size.y);\r\n\t\t\tthis.ctx.stroke();\r\n\t\t\tthis.ctx.closePath();\r\n\t\t},\r\n\r\n\t\tonMouseDown(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.isDrawing = true;\r\n\t\t\tthis.hasDraw = true;\r\n\t\t\tthis.drawStart({\r\n\t\t\t\tx: e.offsetX,\r\n\t\t\t\ty: e.offsetY\r\n\t\t\t})\r\n\t\t},\r\n\t\tonMouseMove(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tif (!this.isDrawing) return;\r\n\t\t\tthis.drawMove({\r\n\t\t\t\tx: e.offsetX,\r\n\t\t\t\ty: e.offsetY\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tonMouseUp(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tif (!this.isDrawing) return;\r\n\t\t\tthis.drawEnd({\r\n\t\t\t\tx: e.offsetX,\r\n\t\t\t\ty: e.offsetY\r\n\t\t\t})\r\n\t\t\tthis.isDrawing = false;\r\n\t\t},\r\n\r\n\t\twrite(){\r\n\t\t\t// let ratio = window.devicePixelRatio;\r\n\t\t\t// this.canvas.style.width = \"100%\";\r\n\t\t\t// this.canvas.style.height = \"100%\";\r\n\t\t\tthis.ctx.lineCap = \"round\";\r\n\t\t\tthis.ctx.lineJoin = \"round\";\r\n\t\t\tthis.ctx.fillStyle =\"yellow\";\r\n\t\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\t\tthis.canvas.addEventListener(\"mousedown\", this.onMouseDown)\r\n\t\t\tthis.canvas.addEventListener(\"mousemove\", this.onMouseMove)\r\n\t\t\tthis.canvas.addEventListener(\"mouseup\", this.onMouseUp)\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n// @import \"../index/index.less\";\r\nbody {\r\n\r\n}\r\n\r\n</style>"]}]}